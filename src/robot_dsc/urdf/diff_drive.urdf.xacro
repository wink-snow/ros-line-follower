<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="simple_dd_bot">

    <xacro:property name="base_width" value="0.2"/>
    <xacro:property name="base_length" value="0.3"/>
    <xacro:property name="base_height" value="0.1"/>

    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_thickness" value="0.02"/>
    <xacro:property name="wheel_offset_y" value="${base_width/2 + wheel_thickness/2}"/>
    <xacro:property name="wheel_offset_z" value="${-base_height/2 + wheel_radius}"/>

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="grey">
                <color rgba="0.5 0.5 0.5 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <inertial> <!-- 简化惯性 -->
            <mass value="1.0"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
    </link>

    <xacro:macro name="wheel_link" params="prefix reflect_y">
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
                </geometry>
                <material name="black">
                    <color rgba="0.1 0.1 0.1 1"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
                </geometry>
            </collision>
            <inertial> <!-- 简化惯性 -->
                <mass value="0.1"/>
                <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
            </inertial>
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <origin xyz="0 ${reflect_y * wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel_link prefix="left" reflect_y="1"/>
    <xacro:wheel_link prefix="right" reflect_y="-1"/>

    <!-- 简单的摄像头 -->
    <xacro:property name="camera_link_size" value="0.02"/>
    <link name="camera_link">
        <visual>
            <geometry>
                <box size="${camera_link_size} ${camera_link_size} ${camera_link_size}"/>
            </geometry>
            <material name="blue">
                <color rgba="0 0 1 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${camera_link_size} ${camera_link_size} ${camera_link_size}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.01"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
        </inertial>
    </link>
    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link="camera_link"/>
        <origin xyz="${base_length/2 - camera_link_size/2} 0 ${base_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- Gazebo Plugins -->
    <gazebo>
        <plugin name="gazebo_ros_diff_drive" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/robot</namespace>
            </ros>
            <update_rate>30</update_rate>
            <!-- Wheels -->
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <!-- Kinematics -->
            <wheel_separation>${base_width + wheel_thickness}</wheel_separation> <!-- 估算轮距 -->
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>
            <!-- Odometry -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>
            <!-- Topic names -->
            <command_topic>cmd_vel</command_topic>
            <odometry_topic>odom</odometry_topic>
        </plugin>
    </gazebo>

    <gazebo reference="camera_link">
        <sensor name="camera_sensor" type="camera">
            <update_rate>10.0</update_rate>
            <camera name="head_camera">
                <horizontal_fov>1.047</horizontal_fov> <!-- 约60度 -->
                <image>
                    <width>320</width>
                    <height>240</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <ros>
                    <namespace>/my_robot</namespace>
                    <argument>--ros-args --remap __node:=camera_driver_node</argument>
                    <argument>--ros-args --remap /my_robot/camera_sensor/image_raw:=/my_robot/camera/image_raw</argument>
                    <argument>--ros-args --remap /my_robot/camera_sensor/camera_info:=/my_robot/camera/camera_info</argument>
                </ros>
                <camera_name>camera_sensor</camera_name>
                <frame_name>camera_link</frame_name>
                <hack_baseline>0.0</hack_baseline> <!-- 对于单目相机 -->
            </plugin>
        </sensor>
    </gazebo>
</robot>